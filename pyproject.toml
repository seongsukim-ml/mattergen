[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = [
    "mattergen",
]

[project]
name = "mattergen"
version = "1.0"
requires-python = ">= 3.10"

dependencies = [
"ase>=3.22.1",
"autopep8",
"cachetools",
"contextlib2",
"emmet-core>=0.84.2",  # keep up-to-date together with pymatgen, atomate2
"fire", # see https://github.com/google/python-fire
"huggingface-hub",
"hydra-core==1.3.1",
"hydra-joblib-launcher==1.1.5",
"jupyterlab>=4.2.5",
"lmdb",
"matplotlib==3.8.4",
"matscipy>=0.7.0",
"mattersim>=1.1",
"monty==2024.7.30 ",  # keep up-to-date together with pymatgen, atomate2
"notebook>=7.2.2",
"numpy<2.0",  # pin numpy before breaking changes in 2.0
"omegaconf==2.3.0",
"pymatgen>=2024.6.4",
"pylint",
"pytest",
"pytorch-lightning==2.0.6",
"setuptools",
"SMACT",
"sympy>=1.11.1",
"torch==2.2.1+cu118", 
"torchvision==0.17.1+cu118",
"torchaudio==2.2.1+cu118",
"torch_cluster",
"torch_geometric>=2.5",
"torch_scatter",
"torch_sparse",
"tqdm",
"wandb>=0.10.33",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
]

[tool.setuptools.packages.find]
include = ["mattergen*"]

[tool.uv.sources]
torch = { index = "pytorch" }
torchvision = { index = "pytorch" }
torchaudio = { index = "pytorch" }
pyg-lib = { url = "https://data.pyg.org/whl/torch-2.2.0%2Bcu118/pyg_lib-0.4.0%2Bpt22cu118-cp310-cp310-linux_x86_64.whl" }
torch_cluster = { url = "https://data.pyg.org/whl/torch-2.2.0%2Bcu118/torch_cluster-1.6.3%2Bpt22cu118-cp310-cp310-linux_x86_64.whl" }
torch_scatter = { url = "https://data.pyg.org/whl/torch-2.2.0%2Bcu118/torch_scatter-2.1.2%2Bpt22cu118-cp310-cp310-linux_x86_64.whl" }
torch_sparse = { url = "https://data.pyg.org/whl/torch-2.2.0%2Bcu118/torch_sparse-0.6.18%2Bpt22cu118-cp310-cp310-linux_x86_64.whl" }

[[tool.uv.index]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[tool.uv.workspace]
members = ["matgen"]


[project.scripts]
mattergen-generate = "scripts.generate:_main"
mattergen-train = "scripts.run:mattergen_main"
mattergen-finetune = "scripts.finetune:mattergen_finetune"
mattergen-evaluate = "scripts.evaluate:_main"
csv-to-dataset = "scripts.csv_to_dataset:main"